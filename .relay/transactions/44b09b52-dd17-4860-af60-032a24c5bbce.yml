uuid: 44b09b52-dd17-4860-af60-032a24c5bbce
projectId: google-ai-studio-notification
createdAt: '2025-08-03T09:24:28.861Z'
linesAdded: 116
linesRemoved: 0
gitCommitMsg: 'feat: create chrome extension for AI Studio notifications'
promptSummary: >-
  Create a chrome extension to monitor a button state on aistudio.google.com and
  play a sound on a state transition.
reasoning:
  - >-
    Excellent! Creating a Chrome extension to monitor DOM changes and provide
    audio feedback is a great use case. Here are the files for your "AI Studio
    Notifier" extension.
  - '### Step 1: `manifest.json`'
  - >-
    First, I'll create the manifest file. This file is the heart of the
    extension, defining its capabilities and permissions. It's configured for
    Manifest V3, specifies it should run on `aistudio.google.com`, and makes the
    sound file accessible to the web page.
  - '### Step 2: `content.js`'
  - >-
    This is the content script that will be injected into the AI Studio page. It
    uses a `MutationObserver` to efficiently detect when the "stoppable-stop"
    element is removed from the page, which signifies the process has completed.
    Upon this specific state change, it plays the notification sound.
  - '### Step 3: `notification.mp3`'
  - >-
    I will create a placeholder file for the sound. **You must replace this
    empty file with a valid `.mp3` sound file** for the extension to work
    correctly.
  - '### Step 4: `README.md`'
  - >-
    Finally, here's a `README.md` file with instructions on how to install and
    use the extension, including the crucial step of adding your own sound file.
  - >-
    With these files in a single folder (and after adding your sound file), you
    can load it as an unpacked extension in Chrome.
operations:
  - type: write
    path: manifest.json
    content: |-
      {
        "manifest_version": 3,
        "name": "AI Studio Notifier",
        "version": "1.0",
        "description": "Plays a sound when a process in Google AI Studio finishes.",
        "permissions": [],
        "host_permissions": [
          "https://aistudio.google.com/*"
        ],
        "content_scripts": [
          {
            "matches": ["https://aistudio.google.com/*"],
            "js": ["content.js"]
          }
        ],
        "web_accessible_resources": [
          {
            "resources": ["notification.mp3"],
            "matches": ["https://aistudio.google.com/*"]
          }
        ]
      }
    patchStrategy: replace
  - type: write
    path: content.js
    content: |-
      let isRunning = false;

      function init() {
          console.log("AI Studio Notifier initializing...");

          // --- Sound Setup ---
          // Note: You must add a 'notification.mp3' file to the extension's root directory.
          const soundUrl = chrome.runtime.getURL('notification.mp3');
          const audio = new Audio(soundUrl);

          function playSound() {
              audio.play().catch(error => console.error('Audio play failed. Make sure notification.mp3 exists and is valid.', error));
          }

          // --- State Checking Logic ---
          function checkForStopButton() {
              // The user identified an element with class "stoppable-stop" as the indicator.
              // This selector looks for a <rect> element whose class list contains "stoppable-stop".
              // Using [class*="..."] makes it robust against other dynamic classes added by the framework.
              return document.querySelector('rect[class*="stoppable-stop"]');
          }
          
          function checkState() {
              const stopButtonExists = !!checkForStopButton();

              if (isRunning && !stopButtonExists) {
                  // This is the transition we're looking for:
                  // State 1 (running, button exists) to State 2 (stopped, button absent).
                  console.log('AI Studio process finished. Playing notification.');
                  playSound();
              }

              // Update the current state for the next check.
              if (isRunning !== stopButtonExists) {
                  console.log(`AI Studio Notifier: State changed to ${stopButtonExists ? 'Running' : 'Stopped'}`);
                  isRunning = stopButtonExists;
              }
          }
          
          // --- Observer Setup ---
          const observer = new MutationObserver(() => {
              // A DOM change occurred, let's re-evaluate the state.
              checkState();
          });

          // We start observing the entire body for changes in its descendants.
          observer.observe(document.body, {
              childList: true,
              subtree: true
          });

          // --- Initial Check ---
          // A short delay helps ensure the page's dynamic content has loaded.
          setTimeout(checkState, 2000);
      }

      // The script might be injected before the body is fully available.
      if (document.body) {
          init();
      } else {
          // If not, wait for it.
          window.addEventListener('DOMContentLoaded', init);
      }
    patchStrategy: replace
  - type: write
    path: notification.mp3
    content: |-
      // This is a placeholder file.
      // Please replace this with a valid .mp3 file named "notification.mp3".
    patchStrategy: replace
  - type: write
    path: README.md
    content: >-
      # AI Studio Notifier


      This Chrome extension plays a sound when a process in Google AI Studio
      finishes.


      ## Installation


      1.  Download all the extension files (`manifest.json`, `content.js`, etc.)
      into a single directory.

      2.  **You must provide your own `notification.mp3` sound file.** Place a
      valid `.mp3` file named `notification.mp3` in the root of the directory
      you just created. You can find many free notification sounds online.

      3.  Open Google Chrome and navigate to the extensions page:
      `chrome://extensions`.

      4.  Enable "Developer mode" using the toggle switch in the top-right
      corner.

      5.  Click the "Load unpacked" button.

      6.  Select the directory containing the `manifest.json`, `content.js`, and
      your `notification.mp3` file.

      7.  The extension should now be installed and active.


      ## How It Works


      The extension injects a content script into any tab whose URL matches
      `https://aistudio.google.com/*`.


      This script uses a `MutationObserver` to efficiently monitor the page's
      structure for changes. It specifically looks for an element that indicates
      a process is running. Based on your request, this is the element:


      -   `<rect class="...stoppable-stop...">`


      ### State Logic


      -   **State 1 (Running):** The `stoppable-stop` element exists on the
      page. The script notes this state.

      -   **State 2 (Stopped):** The `stoppable-stop` element is removed from
      the page.

      -   **Notification:** When the script detects a change from State 1 to
      State 2, it plays the `notification.mp3` sound.


      You can open the developer console (F12) on an AI Studio page to see log
      messages from the extension.
    patchStrategy: replace
snapshot:
  manifest.json: null
  content.js: null
  notification.mp3: null
  README.md: null
approved: true
