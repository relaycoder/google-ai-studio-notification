uuid: 6f78f654-206e-44aa-9c3f-c5d01211e4f4
projectId: google-ai-studio-notification
createdAt: '2025-08-03T09:30:09.656Z'
linesAdded: 49
linesRemoved: 17
gitCommitMsg: 'feat: add desktop notifications via background worker'
promptSummary: >-
  User wants to add desktop notifications that work even when the tab is not
  active.
reasoning:
  - >-
    Excellent idea! Adding desktop notifications is a perfect way to make the
    extension more useful, especially when you're working in other tabs.
  - >-
    This requires a few changes: we'll add a background "service worker" to
    handle notifications, request the `notifications` permission in the
    manifest, and create some icons.
  - '### Step 1: Update `manifest.json`'
  - >-
    I'll add the `notifications` permission, register the new `background.js`
    script, and define icons for the extension and its notifications. I've also
    bumped the version to `1.1`.
  - '### Step 2: Create `background.js` Service Worker'
  - >-
    This new file will run in the background. Its only job is to listen for a
    message from our `content.js` script and then create the desktop
    notification.
  - '### Step 3: Update `content.js` to Send a Message'
  - >-
    Now, when the process finishes, `content.js` will not only play the sound
    but also send a message to the `background.js` script we just created.
  - '### Step 4: Add Icons'
  - >-
    Notifications require an icon. I'll create placeholder files. You can
    replace these with any `.png` images you like (48x48 and 128x128 pixels are
    standard sizes).
  - '### Step 5: Update `README.md`'
  - >-
    Finally, I'll update the README to reflect the new notification feature and
    the new files.
  - >-
    After you add these changes and reload the extension from
    `chrome://extensions`, it will ask for the new "notifications" permission.
    Once granted, you'll get both a sound and a desktop alert when your AI
    Studio process completes!
operations:
  - type: write
    path: manifest.json
    content: |-
      <<<<<<< SEARCH
      {
        "manifest_version": 3,
        "name": "AI Studio Notifier",
        "version": "1.0",
        "description": "Plays a sound when a process in Google AI Studio finishes.",
        "permissions": [],
        "host_permissions": [
          "https://aistudio.google.com/*"
        ],
        "content_scripts": [
          {
            "matches": ["https://aistudio.google.com/*"],
            "js": ["content.js"]
          }
        ],
        "web_accessible_resources": [
          {
            "resources": ["notification.mp3"],
            "matches": ["https://aistudio.google.com/*"]
          }
        ]
      }
      =======
      {
        "manifest_version": 3,
        "name": "AI Studio Notifier",
        "version": "1.1",
        "description": "Plays a sound and shows a notification when a process in Google AI Studio finishes.",
        "permissions": [
          "notifications"
        ],
        "host_permissions": [
          "https://aistudio.google.com/*"
        ],
        "background": {
          "service_worker": "background.js"
        },
        "content_scripts": [
          {
            "matches": ["https://aistudio.google.com/*"],
            "js": ["content.js"]
          }
        ],
        "web_accessible_resources": [
          {
            "resources": ["notification.mp3", "icon128.png"],
            "matches": ["https://aistudio.google.com/*"]
          }
        ],
        "icons": {
          "48": "icon48.png",
          "128": "icon128.png"
        }
      }
      >>>>>>> REPLACE
    patchStrategy: multi-search-replace
  - type: write
    path: background.js
    content: |-
      // Listen for messages from the content script
      chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
        if (message.type === 'processFinished') {
          console.log('Background script received processFinished message.');

          // Create a desktop notification
          chrome.notifications.create({
            type: 'basic',
            iconUrl: 'icon128.png', // An icon is required for basic notifications
            title: 'AI Studio',
            message: 'Your process has finished!',
            priority: 2 // High priority
          });
        }
      });
    patchStrategy: replace
  - type: write
    path: content.js
    content: |-
      <<<<<<< SEARCH
              if (isRunning && !stopButtonExists) {
                  // This is the transition we're looking for:
                  // State 1 (running, button exists) to State 2 (stopped, button absent).
                  console.log('AI Studio process finished. Playing notification.');
                  playSound();
              }
      =======
              if (isRunning && !stopButtonExists) {
                  // This is the transition we're looking for:
                  // State 1 (running, button exists) to State 2 (stopped, button absent).
                  console.log('AI Studio process finished. Playing sound and sending desktop notification.');
                  playSound();
                  // Send a message to the background script to show a desktop notification
                  chrome.runtime.sendMessage({ type: 'processFinished' });
              }
      >>>>>>> REPLACE
    patchStrategy: multi-search-replace
  - type: write
    path: icon48.png
    content: |-
      // This is a placeholder for a 48x48 PNG icon.
      // Please replace this file with a real image.
    patchStrategy: replace
  - type: write
    path: icon128.png
    content: |-
      // This is a placeholder for a 128x128 PNG icon.
      // Please replace this file with a real image.
    patchStrategy: replace
  - type: write
    path: README.md
    content: >-
      <<<<<<< SEARCH

      # AI Studio Notifier


      This Chrome extension plays a sound when a process in Google AI Studio
      finishes.


      ## Installation


      1.  Download all the extension files (`manifest.json`, `content.js`, etc.)
      into a single directory.

      2.  **You must provide your own `notification.mp3` sound file.** Place a
      valid `.mp3` file named `notification.mp3` in the root of the directory
      you just created. You can find many free notification sounds online.

      3.  Open Google Chrome and navigate to the extensions page:
      `chrome://extensions`.

      =======

      # AI Studio Notifier


      This Chrome extension plays a sound and shows a desktop notification when
      a process in Google AI Studio finishes. This allows you to get alerts even
      when you are working in a different browser tab.


      ## Installation


      1.  Download all the extension files (`manifest.json`, `content.js`,
      `background.js`, etc.) into a single directory.

      2.  **Provide your own assets:**
          *   **Sound:** You must replace the placeholder `notification.mp3` file with a valid `.mp3` sound file.
          *   **Icons (Optional but Recommended):** You can replace `icon48.png` and `icon128.png` with your own icons for a personalized look.
      3.  Open Google Chrome and navigate to the extensions page:
      `chrome://extensions`.

      >>>>>>> REPLACE

      <<<<<<< SEARCH

      5.  Click the "Load unpacked" button.

      6.  Select the directory containing the `manifest.json`, `content.js`, and
      your `notification.mp3` file.

      7.  The extension should now be installed and active.


      ## How It Works


      The extension injects a content script into any tab whose URL matches
      `https://aistudio.google.com/*`.


      This script uses a `MutationObserver` to efficiently monitor the page's
      structure for changes. It specifically looks for an element that indicates
      a process is running. Based on your request, this is the element:

      =======

      5.  Click the "Load unpacked" button.

      6.  Select the directory containing all the extension files.

      7.  The extension should now be installed. When you reload it, Chrome may
      ask you to accept the new "Show notifications" permission. Please accept
      it.


      ## How It Works


      The extension uses two main components:


      1.  **Content Script (`content.js`):** This script is injected into the AI
      Studio page. It uses a `MutationObserver` to watch for the disappearance
      of the "running" indicator (`<rect class="...stoppable-stop...">`). When
      this happens, it plays the `notification.mp3` sound and sends a message to
      the background script.


      2.  **Background Service Worker (`background.js`):** This script runs in
      the background. It listens for the message from the content script. When
      it receives the "processFinished" message, it uses the
      `chrome.notifications` API to display a desktop notification, alerting you
      even if you're on another tab.

      >>>>>>> REPLACE

      <<<<<<< SEARCH

      -   `<rect class="...stoppable-stop...">`


      ### State Logic


      -   **State 1 (Running):** The `stoppable-stop` element exists on the
      page. The script notes this state.

      -   **State 2 (Stopped):** The `stoppable-stop` element is removed from
      the page.

      -   **Notification:** When the script detects a change from State 1 to
      State 2, it plays the `notification.mp3` sound.

      =======

      ### State Logic


      -   **State 1 (Running):** The `stoppable-stop` element exists.

      -   **State 2 (Stopped):** The `stoppable-stop` element is removed.

      -   **Notification:** On the transition from State 1 to 2, the extension
      triggers both a sound and a desktop notification.

      >>>>>>> REPLACE
    patchStrategy: multi-search-replace
snapshot:
  background.js: null
  icon48.png: null
  icon128.png: null
  manifest.json: |-
    {
      "manifest_version": 3,
      "name": "AI Studio Notifier",
      "version": "1.0",
      "description": "Plays a sound when a process in Google AI Studio finishes.",
      "permissions": [],
      "host_permissions": [
        "https://aistudio.google.com/*"
      ],
      "content_scripts": [
        {
          "matches": ["https://aistudio.google.com/*"],
          "js": ["content.js"]
        }
      ],
      "web_accessible_resources": [
        {
          "resources": ["notification.mp3"],
          "matches": ["https://aistudio.google.com/*"]
        }
      ]
    }
  content.js: |-
    let isRunning = false;

    function init() {
        console.log("AI Studio Notifier initializing...");

        // --- Sound Setup ---
        // Note: You must add a 'notification.mp3' file to the extension's root directory.
        const soundUrl = chrome.runtime.getURL('notification.mp3');
        const audio = new Audio(soundUrl);

        function playSound() {
            audio.play().catch(error => console.error('Audio play failed. Make sure notification.mp3 exists and is valid.', error));
        }

        // --- State Checking Logic ---
        function checkForStopButton() {
            // The user identified an element with class "stoppable-stop" as the indicator.
            // This selector looks for a <rect> element whose class list contains "stoppable-stop".
            // Using [class*="..."] makes it robust against other dynamic classes added by the framework.
            return document.querySelector('rect[class*="stoppable-stop"]');
        }
        
        function checkState() {
            const stopButtonExists = !!checkForStopButton();

            if (isRunning && !stopButtonExists) {
                // This is the transition we're looking for:
                // State 1 (running, button exists) to State 2 (stopped, button absent).
                console.log('AI Studio process finished. Playing notification.');
                playSound();
            }

            // Update the current state for the next check.
            if (isRunning !== stopButtonExists) {
                console.log(`AI Studio Notifier: State changed to ${stopButtonExists ? 'Running' : 'Stopped'}`);
                isRunning = stopButtonExists;
            }
        }
        
        // --- Observer Setup ---
        const observer = new MutationObserver(() => {
            // A DOM change occurred, let's re-evaluate the state.
            checkState();
        });

        // We start observing the entire body for changes in its descendants.
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
        console.log("AI Studio Notifier: MutationObserver is now watching the page for changes.");

        // --- Initial Check ---
        // A short delay helps ensure the page's dynamic content has loaded.
        setTimeout(checkState, 2000);
    }

    // The script might be injected before the body is fully available.
    if (document.body) {
        init();
    } else {
        // If not, wait for it.
        window.addEventListener('DOMContentLoaded', init);
    }
  README.md: >
    # AI Studio Notifier


    This Chrome extension plays a sound when a process in Google AI Studio
    finishes.


    ## Installation


    1.  Download all the extension files (`manifest.json`, `content.js`, etc.)
    into a single directory.

    2.  **You must provide your own `notification.mp3` sound file.** Place a
    valid `.mp3` file named `notification.mp3` in the root of the directory you
    just created. You can find many free notification sounds online.

    3.  Open Google Chrome and navigate to the extensions page:
    `chrome://extensions`.

    4.  Enable "Developer mode" using the toggle switch in the top-right corner.

    5.  Click the "Load unpacked" button.

    6.  Select the directory containing the `manifest.json`, `content.js`, and
    your `notification.mp3` file.

    7.  The extension should now be installed and active.


    ## How It Works


    The extension injects a content script into any tab whose URL matches
    `https://aistudio.google.com/*`.


    This script uses a `MutationObserver` to efficiently monitor the page's
    structure for changes. It specifically looks for an element that indicates a
    process is running. Based on your request, this is the element:


    -   `<rect class="...stoppable-stop...">`


    ### State Logic


    -   **State 1 (Running):** The `stoppable-stop` element exists on the page.
    The script notes this state.

    -   **State 2 (Stopped):** The `stoppable-stop` element is removed from the
    page.

    -   **Notification:** When the script detects a change from State 1 to State
    2, it plays the `notification.mp3` sound.


    ## Debugging / Viewing Logs


    The extension is designed to print helpful messages to the browser's
    developer console. If something isn't working, or if you just want to see it
    in action, follow these steps:


    1.  Go to the Google AI Studio tab in your browser.

    2.  Open the Developer Tools. You can do this by:
        *   Pressing the `F12` key.
        *   Right-clicking anywhere on the page and selecting "Inspect".
        *   Using the shortcut `Ctrl+Shift+I` (on Windows/Linux) or `Cmd+Option+I` (on Mac).
    3.  In the Developer Tools window that appears, click on the **"Console"**
    tab.


    You should see messages from the extension, starting with "AI Studio
    Notifier initializing...". When a process starts or stops, new messages will
    appear here. If the sound fails to play, an error message will also be shown
    in this console.
approved: true
